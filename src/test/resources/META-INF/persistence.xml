<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"
  version="2.1">
  <persistence-unit name="test">
    <provider>${javax.persistence.provider}</provider>

    ${persistentClasses}

    <shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>

    <properties>
      <!-- Connection-Parameter -->
      <property name="javax.persistence.jdbc.driver" value="${javax.persistence.jdbc.driver}" />
      <property name="javax.persistence.jdbc.url" value="${javax.persistence.jdbc.url}" />
      <property name="javax.persistence.jdbc.user" value="${javax.persistence.jdbc.user}" />
      <property name="javax.persistence.jdbc.password" value="${javax.persistence.jdbc.password}" />

      <!-- Auswahl des DB-Dialektes -->
      <property name="eclipselink.target-database" value="Auto" />
      <property name="eclipselink.jdbc.native-sql" value="true" />

      <!-- Schemagenerierung -->
      <property name="javax.persistence.schema-generation.database.action" value="drop-and-create" />
      <property name="javax.persistence.schema-generation.drop-script-source" value="META-INF/${drop.script.name}" />
      <property name="javax.persistence.schema-generation.drop-source" value="script-then-metadata" />
      <property name="javax.persistence.schema-generation.create-script-source" value="META-INF/${create.script.name}" />
      <property name="javax.persistence.schema-generation.create-source" value="metadata-then-script" />
      <property name="javax.persistence.sql-load-script-source" value="META-INF/${load.script.name}" />
<!-- 
      <property name="eclipselink.ddl-generation" value="create-or-extend-tables" />
      <property name="eclipselink.ddl-generation.output-mode" value="database" />
      <property name="hibernate.hbm2ddl.auto" value="update" />
      <property name="openjpa.jdbc.SynchronizeMappings" value="buildSchema(ForeignKeys=true)" />
 -->

      <!-- Logging level -->
      <!-- EclipseLink: FINE logs SQL commands -->
      <property name="eclipselink.logging.level" value="OFF" />
      <property name="eclipselink.logging.connection" value="false" />
      <property name="eclipselink.logging.parameters" value="true" />
      <property name="eclipselink.logging.session" value="false" />
      <property name="eclipselink.logging.thread" value="false" />
      <property name="eclipselink.logging.timestamp" value="true" />
      <!-- Hibernate: For SQL logging set the log categories org.hibernate.SQL und org.hibernate.type.descriptor.sql.BasicBinder to TRACE -->
      <property name="openjpa.Log" value="log4j" />
      <property name="openjpa.ConnectionFactoryProperties" value="PrintParameters=true, PrettyPrint=true, PrettyPrintLineLength=72" />

      <!-- Hibernate: Use new id generator -->
      <property name="hibernate.id.new_generator_mappings" value="true" />

      <!-- Hibernate: Configure 2nd level cache -->
      <property name="hibernate.cache.use_second_level_cache" value="true" />
      <property name="hibernate.cache.use_query_cache" value="true" />
      <property name="hibernate.cache.region.factory_class" value="org.hibernate.cache.ehcache.EhCacheRegionFactory"/>
      
      <property name="gedoplan.database.name" value="${database.name}"/>
      <property name="gedoplan.jpaprovider.name" value="${jpaprovider.name}"/>
    </properties>
  </persistence-unit>
  
 	
  
  	<!-- 
	Michael Sch채fer, Unit f체r die Schema Generation mit dem Ansatz Top Down  
	-->


	<persistence-unit name="jpa-demo-top-down">

		<provider>org.hibernate.ejb.HibernatePersistence</provider>

		<class>de.gedoplan.buch.jpademos.entity.Country</class>


		<properties>

			<property name="javax.persistence.database-product-name"		value="H2" />
			<property name="javax.persistence.database-major-version"		value="1" />
			<property name="javax.persistence.database-minor-version"		value="3" />

			<property name="javax.persistence.schema-generation.database.action"		value="create" />
			<property name="javax.persistence.schema-generation.create-source"			value="metadata" />
			<property name="javax.persistence.schema-generation.scripts.action"			value="create" />
			<property name="javax.persistence.schema-generation.scripts.create-target"	value="META-INF/jpa-demo-schema.sql" />		
			<property name="javax.persistence.sql-load-script-source"   			value="META-INF/jpa-demo-schema-load.sql" />


			<property name="javax.persistence.jdbc.driver" value="org.h2.Driver" />
			<property name="javax.persistence.jdbc.url" value="jdbc:h2:mem:test;DB_CLOSE_DELAY=-1" />
			<property name="javax.persistence.jdbc.user" value="test" />
			<property name="javax.persistence.jdbc.password" value="test" />
		</properties>

	</persistence-unit>
	
	<!-- 
	Michael Sch채fer, Unit f체r die Schema Konfiguration mit dem Ansatz Top Down 	
	 -->
	
	<persistence-unit name="jpa-demo-meet-in-the-middle">

		<provider>org.hibernate.ejb.HibernatePersistence</provider>

		<class>de.gedoplan.buch.jpademos.entity.Country</class>


		<properties>

			<property name="javax.persistence.database-product-name"			value="H2" />
			<property name="javax.persistence.database-major-version"			value="1" />
			<property name="javax.persistence.database-minor-version"			value="3" />


			<property name="javax.persistence.schema-generation.database.action"		value="create" />
			<property name="javax.persistence.schema-generation.create-source"			value="script" />
			<property name="javax.persistence.schema-generation.create-script-source"	value="META-INF/jpa-demo-schema.sql" />
			<property name="javax.persistence.sql-load-script-source"				value="META-INF/jpa-demo-schema-load.sql" />


			<property name="javax.persistence.jdbc.driver" value="org.h2.Driver" />
			<property name="javax.persistence.jdbc.url" value="jdbc:h2:mem:test;DB_CLOSE_DELAY=-1" />
			<property name="javax.persistence.jdbc.user" value="test" />
			<property name="javax.persistence.jdbc.password" value="test" />
		</properties>

	</persistence-unit>
  
  
  
    
  
  
</persistence>